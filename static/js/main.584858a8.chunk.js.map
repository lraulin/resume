{"version":3,"sources":["About.jsx","Jumbo.jsx","Resume.jsx","Projects.jsx","App.jsx","serviceWorker.js","index.js"],"names":["About","props","source","Jumbo","Jumbotron","Container","Row","Col","keywords","Resume","id","className","href","join","dateTime","datetime","style","display","Projects","App","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","NavbarToggler","onClick","console","log","Collapse","navbar","Nav","NavItem","NavLink","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.584858a8.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\nconst md = `# About Me\n\nI am a self-taught programmer with two years of experience: one paid as a DoT contractor, and one of full-time self-directed study.\n\nJavaScript/Python developer. As a contractor at the DoT, I created a web app with React, Node/Express, and Postgres, to be deployed via AWS. I also created multiple scripts/apps (in Python, Bash, and Node) to assist the cybersecurity team by automating various tasks, processing data and sending it to the appropriate people, etc.\n\nIn a former life, I was an English teacher in Korea for a decade, and before that, I was a boatswain's mate in the US Coast Guard. I also have a master's degree in psychology.\n\nMy hobbies include reading (nonfiction), fitness (Indian clubs, functional strength, yoga, kayaking, natural movement, etc), and camping.`;\n\nconst About = props => {\n  return (\n    <div>\n      <ReactMarkdown source={md} />\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { Jumbotron, Container, Row, Col, Button } from \"reactstrap\";\n\nconst Jumbo = () => (\n  <Jumbotron>\n    <Container>\n      <Row>\n        <Col>\n          <h1>Lee M. Raulin</h1>\n          <h2>JavaScript/Python Developer</h2>\n          {/* <p>\n            <Button\n              tag=\"a\"\n              color=\"success\"\n              size=\"large\"\n              href=\"http://reactstrap.github.io\"\n              target=\"_blank\"\n            >\n              View Reactstrap Docs\n            </Button>\n          </p> */}\n        </Col>\n      </Row>\n    </Container>\n  </Jumbotron>\n);\n\nexport default Jumbo;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Link } from \"react-router-dom\";\n\nconst keywords = [\n  \"working with command lines\",\n  \"writing modules\",\n  \"version control systems\",\n  \"DevOps practices\",\n  \"responsive design\",\n  \"agile software development\",\n  \"front-end systems\",\n  \"debugging\",\n  \"server-side scripting\",\n  \"writing application code\",\n  \"object-oriented design\",\n  \"technical documentation\",\n  \"SQL\",\n  \"JavaScript\",\n  \"software engineering\",\n  \"Python\",\n  \"C#\",\n  \"ASP.NET\",\n  \"MVC\",\n  \"MVVM\",\n];\n\nconst Resume = props => (\n  <div>\n    <h1>Lee M. Raulin</h1>\n    <h2>Full Stack Web Developer</h2>\n    <section id=\"contactSection\">\n      <p className=\"phoneNumber\">(443) 684-8939</p>\n      <p className=\"emailAddress\">leeraulin@gmail.com</p>\n      <p className=\"streetAddress\">\n        5006 Valley Drive Chesapeake Beach, MD 20732\n      </p>\n      <a href=\"http://github.com/lraulin\">Github</a>\n      <a href=\"http://www.linkedin.com/in/leeraulin\" />\n    </section>\n    <section id=\"summarySection\">\n      <p>\n        Dedicated and disciplined self-taught programmer 8+ years of experience\n        as an English as a Second Language teacher in Korea and one year of\n        experience as a web developer working under contract for the US\n        Department of Transportation.\n      </p>\n      <p>\n        Extremely motivated and passionate life-long learner. Have been using\n        Linux as primary operating system for almost a decade. Learned Python as\n        a hobby, and learned how to use Vim because it seemed neat. After\n        deciding to become a programmer, I spent a year of full-time\n        practice/self-study before being accepted by WOS. In the year since\n        then, my skills with JavaScript and Python have continued to develop, as\n        I have become familiar with the languages in depth and used them to\n        create solutions to real-world problems.\n      </p>\n      <p>\n        <em>Keywords:</em>\n        {\" \" + keywords.join(\", \")}\n      </p>\n    </section>\n    <section id=\"technicalSkillsSection\">\n      <h2>Technical Skills</h2>\n      <h3>Front End</h3>\n      <ul>\n        <li>JavaScript</li>\n        <li>HTML</li>\n        <li>CSS</li>\n      </ul>\n      <h3>Back End</h3>\n      <ul>\n        <li>Python</li>\n        <li>PostgreSQL</li>\n        <li>C#</li>\n        <li>ASP.NET</li>\n      </ul>\n      <h3>Misc</h3>\n      <ul>\n        <li>Unix/Linux command line (CLI)</li>\n        <li>Git/Github</li>\n        <li>Linux/Windows/OSX</li>\n      </ul>\n    </section>\n    <section id=\"experienceSection\">\n      <h2>Professional Experience</h2>\n      <h3 className=\"company-and-title\">\n        <a href=\"https://www.wforce.org/\">Workforce Opportunity Services</a>{\" \"}\n        Full Stack Web Developer\n      </h3>\n      <p className=\"dateRange\">\n        <time dateTime=\"2018-11\">November 2018</time>\n        {\" ~ \"}\n        <time datetime=\"2019-09\">September 2019</time>\n      </p>\n      <p className=\"federalOnly\" style={{ display: \"none\" }}>\n        $60,000, 40 hours/week\n      </p>\n      <p className=\"jobDescription\">\n        Contractor at the US Department of Transportation (Office of the\n        Secretary of the Treasury).\n      </p>\n      <ul>\n        <li>\n          <p>\n            <a href=\"/projects/incident-map\">Twitter Incident Report Map</a>{\" \"}\n            Reverse-engineered and reconstructed an app (with access only to the\n            front-end code) using JavaScript (ES6), React, Redux, AWS (E2, RDS,\n            S5), PostgreSQL, Mapbox, etc. Deployed to Firebase, AWS, and Vultr\n            (cloud VM) as staging environment. Calculated projected costs and\n            prepared budget proposal for AWS infrastructure, which was accepted.\n          </p>\n        </li>\n      </ul>\n      <ul>\n        <li>\n          <p>\n            <a href=\"/projects/dns-script\">DNS Script</a> Coded a NodeJS/SQLite\n            console app that automated checking hundreds of DNS servers every\n            hour and emailing a daily summary of any discrepancies. Deployed to\n            a government BIND (Linux) server.\n          </p>\n        </li>\n        <li>\n          <p>\n            <a href=\"/projects/vulnerability-visualization\">\n              Vulnerability Visualization\n            </a>{\" \"}\n            Programmed a Python script that triggers on receipt of an email by a\n            MS 365 account containing a report on security vulnerabilities. It\n            extracts files attached to the PDF file attached to the email,\n            reformats the spreadsheets, including calculated values, and emails\n            them to a distribution list.\n          </p>\n        </li>\n        <li>\n          <p>\n            <a href=\"/projects/syslog_analytics\">Syslog Analytics</a> Composed\n            Python script to parse/reformat spreadsheet files to support cyber\n            team.\n          </p>\n        </li>\n        <li>\n          Advised and tutored coworkers in Bash and Python scripting and\n          Linux/Unix command-line (CLI).\n        </li>\n      </ul>\n      {/* Supervisor: Dan Morgan (202) 366-4308\n      [daniel.morgan@dot.gov](mailto:daniel.morgan@dot.gov)  */}\n      <h3>\n        After-school English Academies (Various) | English Language Instructor\n        (ESL/EFL)\n      </h3>\n      <p>\n        <time datetime=\"2009\">2009</time> ~ <time datetime=\"2017\">2017</time>{\" \"}\n      </p>\n      <h2>Education</h2>{\" \"}\n      <h3>\n        <span className=\"degree\">Master of Arts in General Psychology</span>{\" \"}\n        <span className=\"school\">\n          <a href=\"https://www.ncu.edu/\">Northcentral University</a>\n        </span>\n        <ul>\n          <li>Courses in statistics and research methods.</li>\n        </ul>\n      </h3>\n      <h3>\n        <span className=\"degree\">Batchelor of Arts in Psychology</span>{\" \"}\n        <span className=\"school\">\n          <a href=\"https://www.ncu.edu/\">St. Mary's College of Maryland</a>\n        </span>\n      </h3>\n    </section>\n  </div>\n);\n\nexport default Resume;\n","import React from \"react\";\n\nconst Projects = props => {\n  return <h1>Projects</h1>;\n};\n\nexport default Projects;\n","import React, { useState } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n} from \"reactstrap\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport About from \"./About\";\nimport Jumbo from \"./Jumbo\";\nimport Resume from \"./Resume\";\nimport Projects from \"./Projects\";\n\nconst App = props => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => {\n    console.log(isOpen);\n    return setIsOpen(!isOpen);\n  };\n\n  return (\n    <div>\n      {/* <Navbar color=\"inverse\" light expand=\"md\"> */}\n      <Navbar color=\"dark\" dark expand=\"md\">\n        <NavbarBrand href=\"/\">Lee M. Raulin</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/about/\">About</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/resume/\">Resume</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/projects/\">Projects</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"https://github.com/lraulin\">Github</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"https://www.linkedin.com/in/leeraulin/\">\n                LinkedIn\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n      <BrowserRouter>\n        <Route exact path=\"/\" component={Jumbo} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/resume\" component={Resume} />\n        <Route path=\"/projects\" component={Projects} />\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}